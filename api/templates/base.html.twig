<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title>
			{% block title %}Welcome!
			{% endblock %}
		</title>
		<link rel="icon" href="/images/AI_favicon.png">
		{# Run `composer require symfony/webpack-encore-bundle` to start using Symfony UX #}
		<!-- Font Awesome -->
		<link
		rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"/> <!-- Google Fonts Roboto -->
		<link
		rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap"/>
		<!-- MDB ESSENTIAL -->
		<link rel="stylesheet" href="/css/mdb.min.css"/>
		<!-- MDB PLUGINS -->
		{# <link
								rel="stylesheet" href="/css/mdb-plugins.min.css"/> #}
		<link
		rel="stylesheet" href="/plugins/css/all.min.css"/> <!-- Custom styles -->
		<link rel="stylesheet" href="/css/style.css"/>
	</head>
	<body>
	{% include "components/navbar.html.twig" %}
		<div class="container"> {% block body %}{% endblock %}
			</div>

			<!-- MDB ESSENTIAL -->
			<script type="text/javascript" src="/js/mdb.min.js"></script>
			<!-- MDB PLUGINS -->
			<script type="text/javascript" src="/plugins/js/all.min.js"></script>

	{% if is_granted('ROLE_USER') %}
		<script>
			var sender;
			const eventSource = new EventSource("{{ mercure('https://localhost/users/' ~ app.user.id ~ '/messages')|escape('js') }}");
			const notificationCount = document.getElementById('conversation-unread');
			const inputField = document.getElementById("message-input");
			const sendButton = document.getElementById("button-addon2");
				 
			const updateHeaderMessageNotification = (data) => {
				if (data.sent.id != {{ app.user.id }} && notificationCount) {
					const sum = +notificationCount.innerText;
					notificationCount.innerText = +notificationCount.innerText + 1;
				}
			}
			{% if conversation is defined %}
				const element = document.getElementById("message-box-{{ conversation.id }}");	
				var scrollDiv = document.getElementById("message-box-{{ conversation.id }}");
					scrollDiv.scrollTop = scrollDiv.scrollHeight;
				
				const sendMessage = () => {
					var message = inputField.value;
					sender = {{ conversation.activityParticipant.id }}
					{% if conversation.activityOwner.id is same as (app.user.id) %}
						messageTarget = sender;
					{% else %}
						messageTarget = {{ conversation.activityOwner.id }};
					{% endif %}
					const messageData = {
						content: message,
						conversation: "/conversations/{{ conversation.id }}",
						recipient: "/users/" + messageTarget,
						sent: "/users/{{ app.user.id }}"
					};

					fetch('https://localhost/messages', {
						method: 'POST',
						headers: {
							'Accept': 'application/json',
							'Content-Type': 'application/json'
						},
						body: JSON.stringify(messageData)
					});
				}

				sendButton.addEventListener("click", sendMessage);

				const addMessageToList = (data, sender) => {
					if (!element){
						return;
					}
					const uri = {{ app.user.id }};
					
					const date = new Date(data.createdAt).toLocaleTimeString();
				

					const messageBubbleTemplate = document.createElement('messageBubbleTemplate');
					messageBubbleTemplate.innerHTML = `<div class="d-flex flex-row justify-content-${sender === uri ? "end" : "start"}">
						<p class="fw-bold mb-0">${data.sent.username }</p>
						<img src="/avatars/{{ app.user.avatarPath }}"
						alt="avatar 1" class="message-avatar" alt="avatar 1">
						<div>
							<p class="small p-2 ms-3 mb-1 rounded-3" style=" background-color: ${sender === uri ? "rgba(181,151,209,1)" : "rgba(129,198,190,1)"};">${data.content}</p>
							<p class="small ms-3 mb-3 rounded-3 text-muted text-muted float-${sender === uri ? "end" : "start"}">${date}</p>
						</div>
					</div>`;
					element.appendChild(messageBubbleTemplate);
				}

				const addMessageToSideList = (data, sender) => {
					if(!element){
						return;
					}
				}

				 {# const updateSideMessageNotification = (data) => {
					if (data.sent.id != {{ app.user.id }} && notificationCount) {
					notificationCount.innerText = +notificationCount.innerText + 1;
					}
					const conversationLine = document.getElementById(`conversation-${data.conversation.id}-unread`)
					console.log(conversationLine);
					if (!conversationLine){
						const sideMessageTemplate = document.createElement('sideMessageTemplate');
						sideMessageTemplate.innerHTML = `<li class="p-2 border-bottom">
							<a href="#!" class="d-flex justify-content-between">
								<div class="d-flex flex-row">
									<div>
										<img src="/avatars/{{ app.user.avatarPath }}" alt="avatar" class="d-flex align-self-center me-3" width="60">
									</div>
									<div class="pt-1">
										<p class="fw-bold mb-0">{{app.</p>
										<p class="small text-muted"></p>
									</div>
								</div>
								<div class="pt-1">
									<p class="small text-muted mb-1">5 mins ago</p>
									<span id="conversation-${conversation.id}-unread" class="badge bg-danger rounded-pill float-end">5</span>
								</div>
							</a>
						</li>`;
					} #} 
				{# } 
				

			{# function sendMessage() {
        		var inputField = document.getElementById("message-input");
        		var message = inputField.value;
        		{% if conversation.activityOwner.id is same as (app.user.id) %}
            		messageTarget = sender;
        		{% else %}
            		messageTarget = {{ conversation.activityOwner.id }};
        		{% endif %}

        		const messageData = {
				content: message,
				conversation: "/conversations/{{ conversation.id }}",
				recipient: "/users/" + messageTarget,
				sent: "/users/{{ app.user.id }}"
        		}
			}; #}
			{% endif %}

			eventSource.onmessage = event => {
				console.log(JSON.parse(event.data));
				data = JSON.parse(event.data);
				sender = data.sent.id;
				console.log(data);
				

				{% if conversation is defined %}

					//updateSideMessageNotification(data)
					addMessageToList(data, sender)
					scrollDiv.scrollTop = scrollDiv.scrollHeight;

				{% else %}

					updateHeaderMessageNotification(data)
					
					

				{% endif %}
			};
			
		</script>
	{% endif %}
	</body>
</html>
